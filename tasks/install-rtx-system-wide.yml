---

# 
# Set rtx_dir
# 
- name: Set rtx_dir to /opt/rtx when system_wide is true
  ansible.builtin.set_fact:
    rtx_dir: "/opt/rtx"
  when: system_wide is true

- name: Ensure rtx_dir presence and ownership
  ansible.builtin.file:
    path: "{{ rtx_dir }}"
    owner: "{{ rtx_user }}"
    group: "{{ rtx_group }}"
    state: directory
    mode: "0755"

# - name: set facts
#   set_fact:
#     cpu_type: 'x64'
#     when: ansible_architecture == "x86_64"

# - name: Install rtx binary
#   ansible.builtin.get_url:
#     # https://github.com/jdxcode/rtx/releases/download/v1.30.4/rtx-v1.30.4-linux-arm64
#     url: https://ghproxy.com/https://github.com/jdxcode/rtx/releases/download/{{ rtx_version }}/rtx-{{ rtx_version }}-{{ ansible_system }}-x64
#     dest: /usr/local/bin/rtx
#     mode: "755"

# - name: Get user home directory
#   ansible.builtin.shell: >
#     set -o pipefail
#     getent passwd {{ rtx_user }}  | awk -F: '{ print $6 }'
#   changed_when: false
#   register: user_home

# - name: Debug output
#   ansible.builtin.debug:
#     var: user_home.stdout

# # - name: Update bashrc
# #   lineinfile:
# #     dest: "{{user_home.stdout}}/.bashrc"
# #     create: yes
# #     mode: 0644
# #     line: 'eval "$(rtx activate bash)"'
# #     regexp: '^eval "$(rtx activate bash)"'

- name: Source rtx script
  ansible.builtin.template:
    src: rtx.sh.j2
    dest: /etc/profile.d/rtx.sh
    owner: root
    group: root
    mode: "0755"
  become: true

# - name: Source bashrc
#   shell: source {{user_home.stdout}}/.bashrc && echo bashrc sourced
#   # args:
#   #    executable: /bin/bash

# - name: Run rtx version
#   ansible.builtin.shell: rtx version
#   register: rtx_version_output

# - name: Output rtx version
#   debug: var=rtx_version_output.stdout_lines
