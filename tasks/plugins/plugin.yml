---
# - name: "Install {{ item }} dependencies with apt"
#   ansible.builtin.apt:
#     # name: "{{ rtx_apt_{{ item }}_dependencies }}"
#     name: "{{ 'rtx_apt_' + item + '_dependencies' }}"
#     install_recommends: false
#     cache_valid_time: "{{ apt_cache_valid_time }}"
#   retries: "{{ remote_package_retries }}"
#   register: "{{ 'apt_' + item + '_result' }}"
#   until: "{{ 'apt_' + item '_result' }} is succeeded"
#   become: true
#   loop:
#     - nodejs
#     - python
#     - golang
#     - erlang
#     - elixir
#     - ruby
#     - java
#     - php
#   when: ansible_os_family == "Debian" and item in plugins_to_install

- name: Install {{ item }} dependencies with apt
  ansible.builtin.apt:
    name: "{{ vars['rtx_apt_' + item + '_dependencies'] }}"
    install_recommends: false
    cache_valid_time: "{{ apt_cache_valid_time }}"
  retries: "{{ remote_package_retries }}"
  register: apt_result
  until: apt_result is succeeded
  become: true
  changed_when: false
  loop:
    - golang
    - nodejs
    - python
    - ruby
    - erlang
    - elixir
    - java
    - php
  when: ansible_os_family == "Debian" and item in plugins_to_install

- name: Install {{ item }} dependencies with dnf
  ansible.builtin.dnf:
    name: "{{ vars['rtx_yum_' + item + '_dependencies'] }}"
  retries: "{{ remote_package_retries }}"
  register: dnf_result
  until: dnf_result is succeeded
  become: true
  changed_when: false
  loop:
    - golang
    - nodejs
    - python
    - ruby
    - erlang
    - elixir
    - java
    - php
  # when: ansible_os_family == "RedHat" and item in plugins_to_install
  when: ansible_pkg_mgr == "dnf" and item in plugins_to_install

- name: Install {{ item }} dependencies with yum
  ansible.builtin.yum:
    name: "{{ vars['rtx_yum_' + item + '_dependencies'] }}"
  retries: "{{ remote_package_retries }}"
  register: yum_result
  until: yum_result is succeeded
  become: true
  changed_when: false
  loop:
    - golang
    - nodejs
    - python
    - ruby
    - erlang
    - elixir
    - java
    - php
  when: ansible_distribution == "Amazon" and item in plugins_to_install
