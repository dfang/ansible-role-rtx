---
- name: Remove /etc/profile.d/rtx.sh if exists
  ansible.builtin.file:
    path: /etc/profile.d/rtx.sh
    state: absent
  become: true
  when: system_wide is false

- name: Get user home directory
  ansible.builtin.shell: |
    set -o pipefail
    getent passwd {{ rtx_user }}  | awk -F: '{ print $6 }'
  changed_when: false
  register: user_home

- name: Update bashrc
  ansible.builtin.lineinfile:
    dest: "{{ user_home.stdout }}/.bashrc"
    create: true
    mode: "0644"
    line: export RTX_DATA_DIR=$HOME/.local/share/rtx
    regexp: ^export RTX_DATA_DIR=$HOME/.local/share/rtx

- name: Update bashrc
  ansible.builtin.lineinfile:
    dest: "{{ user_home.stdout }}/.bashrc"
    create: true
    mode: "0644"
    line: eval "$(rtx activate bash)"
    regexp: ^eval "$(rtx activate bash)"

- name: Source bashrc
  ansible.builtin.shell: source {{ user_home.stdout }}/.bashrc && echo bashrc sourced
  args:
    executable: /bin/bash
  changed_when: false

# - name: Get users HOME
#   ansible.builtin.getent:
#     database: passwd
#     key: "{{ rtx_user }}"
#     split: ":"
#   when: rtx_dir is undefined and system_wide is false

- name: Set rtx_dir variable based on home directory
  ansible.builtin.set_fact:
    rtx_dir: "{{ user_home.stdout }}/.local/share/rtx/"
  when: rtx_dir is undefined and system_wide is false

# - name: Ensure rtx_dir presence and ownership
#   ansible.builtin.file:
#     path: "{{ rtx_dir }}"
#     owner: "{{ rtx_user }}"
#     group: "{{ rtx_group }}"
#     state: directory
#     mode: "0755"

# # - name: set facts
# #   set_fact:
# #     cpu_type: 'x64'
# #     when: ansible_architecture == "x86_64"

# # - name: Install rtx binary
# #   ansible.builtin.get_url:
# #     # https://github.com/jdxcode/rtx/releases/download/v1.30.4/rtx-v1.30.4-linux-arm64
# #     url: https://ghproxy.com/https://github.com/jdxcode/rtx/releases/download/{{ rtx_version }}/rtx-{{ rtx_version }}-{{ ansible_system }}-x64
# #     dest: /usr/local/bin/rtx
# #     mode: "755"

# - name: Debug output
#   ansible.builtin.debug:
#     var: user_home

# - name: Run rtx version
#   ansible.builtin.shell: rtx version
#   register: rtx_version_output

# - name: Output rtx version
#   debug: var=rtx_version_output.stdout_lines
